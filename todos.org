* Meta 
** TODO Get images rendering properly in project 
** TODO Global todo list for project 
** TODO Go through software carpentry material. 
* Lessons 
** TODO IDE Basics. Could be intermediate 
** TODO Ipython Notebook basics. 
** TODO Finalise setup guide 
*** TODO Ensure instructions to install pyzo on ubuntu are available 
** TODO Difference btw. Python 2 and python 3. 
** TODO 1st Session (longer session to account for installation of software):
** TODO Difference btw. Python 2 and python 3
** TODO Software Installation and setup. (30min)
** TODO Basic python types, operations. Declaring data structures (lists, dictionaries). 
*** TODO Float: a number represented with a decimal place.
*** TODO Integer: a whole number represented without a decimal place.
*** TODO String: a list of characters.
*** TODO Lists: a list of objects.
*** TODO Understanding 2D array (list of lists).
Important for numPy.
numPy, matplotlib to visualise and use actual data.
Create a .csv file relating to a population health study.
Demo of numPy/matplotlib.
Exercises involving classes/library and going to google.
** TODO Basic arithmetic:
*** TODO add or concatenate.
*** TODO / division.
*** TODO // floor division 
*** TODO % modulus.
*** TODO Print statements, Built in functions, help.
*** TODO print()
*** TODO len()
*** TODO substring()
*** TODO find()
*** TODO max()/min()
*** TODO Search google for some and put emphasis on the fact that memorizing functions are not important but rather a skill picked up by practice. If you were working in a lab you don't need to know everything about the lab just where to look for what you are wanting to use.
** TODO Input 
*** TODO Converting types.
Put emphasis on the difference in some methods when working on different types, and that it is important to make sure we are working with the correct type so that we don't end up with crazy output.
** TODO Debugging 
*** TODO Error messages? Reading them and understanding where the error is.
*** TODO Google? Show how to google error messages.
*** TODO Basic print debugging.
*** TODO Basic problems involving variable assignment, converting input into correct type.

e.g:

A = 1
B = 2
C = 1

print(A = B)
print(B = C)
print(A = C)

What is output?
** TODO Input/Output
*** TODO User input/output. 
*** TODO File input/output.
Make a text file with a large number of lines consisting of 
“Name age gender” for us to import and manipulate during this section.
Avoid the use of unnecessary libraries yet at all costs.
** TODO  Functions.
*** TODO Compartmentalisation for readability and organization. Also to break down a big problem into lots of smaller ones then bring them all together in a main() function.
** TODO Control Flow 
*** TODO loops , conditionals, using actual relevant data.
*** TODO Problem solving.
*** TODO Pseudocode.
**** TODO Decide on a generic pseudocode syntax to use.
Exercises using pseudocode and problem solving to implement functions, loops and conditionals.
** TODO Classes.
Discuss this and make sure everyone understands. Use “super object” analogy to reference the intro analogy made about objects.
** TODO Libraries.
Import some helpful libraries. Make very clear that these are still python but rather code that has been written for you to help you do more complex tasks a lot easier. Show how to google to find methods within this library.
** TODO Random numbers.
** TODO Testing and Debugging.  
*** TODO Try catch.
*** TODO Assertions.
*** TODO Giving a piece of broken code and asking them to fix it. Or giving broken data and asking them to write a program to catch it.
** TODO BRING EVERYTHING TOGETHER!! Give design brief for a program that you help them at each step to create. Make it funny. 





#+TODO: TODO(t) | DONE(d)

* Notes
